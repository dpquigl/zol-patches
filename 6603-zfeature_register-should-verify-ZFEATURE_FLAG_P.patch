From 0803e914d3511e82e0b1cc0c888af873a4aaa7d1 Mon Sep 17 00:00:00 2001
From: ilovezfs <ilovezfs@icloud.com>
Date: Wed, 10 Feb 2016 19:32:19 -0800
Subject: [PATCH] 6603 zfeature_register() should verify
 ZFEATURE_FLAG_PER_DATASET implies SPA_FEATURE_EXTENSIBLE_DATASET Reviewed by:
 Matthew Ahrens <mahrens@delphix.com> Reviewed by: Richard Laager
 <rlaager@wiktel.com> Approved by: Robert Mustacchi <rm@joyent.com>

---
 usr/src/common/zfs/zfeature_common.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/usr/src/common/zfs/zfeature_common.c b/usr/src/common/zfs/zfeature_common.c
index 6c878bf..2ca2120 100644
--- a/usr/src/common/zfs/zfeature_common.c
+++ b/usr/src/common/zfs/zfeature_common.c
@@ -130,6 +130,16 @@ zfeature_depends_on(spa_feature_t fid, spa_feature_t check)
 	return (B_FALSE);
 }
 
+static boolean_t
+deps_contains_feature(const spa_feature_t *deps, const spa_feature_t feature)
+{
+	for (int i = 0; deps[i] != SPA_FEATURE_NONE; i++)
+		if (deps[i] == feature)
+			return (B_TRUE);
+
+	return (B_FALSE);
+}
+
 static void
 zfeature_register(spa_feature_t fid, const char *guid, const char *name,
     const char *desc, zfeature_flags_t flags, const spa_feature_t *deps)
@@ -147,6 +157,9 @@ zfeature_register(spa_feature_t fid, const char *guid, const char *name,
 	if (deps == NULL)
 		deps = nodeps;
 
+	VERIFY(((flags & ZFEATURE_FLAG_PER_DATASET) == 0) ||
+	    (deps_contains_feature(deps, SPA_FEATURE_EXTENSIBLE_DATASET)));
+
 	feature->fi_feature = fid;
 	feature->fi_guid = guid;
 	feature->fi_uname = name;
-- 
1.8.3.1

