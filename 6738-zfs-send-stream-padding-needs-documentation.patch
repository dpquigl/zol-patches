From c20404ff77119516354b0d112d28b7ea0dadd303 Mon Sep 17 00:00:00 2001
From: Eli Rosenthal <eli.rosenthal@delphix.com>
Date: Wed, 30 Mar 2016 16:26:13 -0700
Subject: [PATCH] 6738 zfs send stream padding needs documentation Reviewed by:
 Matthew Ahrens <mahrens@delphix.com> Reviewed by: Dan Kimmel
 <dan.kimmel@delphix.com> Reviewed by: Paul Dagnelie <pcd@delphix.com>
 Reviewed by: Dan McDonald <danmcd@omniti.com> Approved by: Robert Mustacchi
 <rm@joyent.com>

---
 module/zfs/dmu_send.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/module/zfs/dmu_send.c b/module/zfs/dmu_send.c
index 6112765..50b8aba 100644
--- a/module/zfs/dmu_send.c
+++ b/module/zfs/dmu_send.c
@@ -96,6 +96,19 @@ dump_bytes(dmu_sendarg_t *dsp, void *buf, int len)
 {
 	dsl_dataset_t *ds = dmu_objset_ds(dsp->dsa_os);
 	ssize_t resid; /* have to get resid to get detailed errno */
+
+	/*
+	 * The code does not rely on this (len being a multiple of 8).  We keep
+	 * this assertion because of the corresponding assertion in
+	 * receive_read().  Keeping this assertion ensures that we do not
+	 * inadvertently break backwards compatibility (causing the assertion
+	 * in receive_read() to trigger on old software).
+	 *
+	 * Removing the assertions could be rolled into a new feature that uses
+	 * data that isn't 8-byte aligned; if the assertions were removed, a
+	 * feature flag would have to be added.
+	 */
+
 	ASSERT0(len % 8);
 
 	dsp->dsa_err = vn_rdwr(UIO_WRITE, dsp->dsa_vp,
@@ -1758,7 +1771,10 @@ receive_read(struct receive_arg *ra, int len, void *buf)
 {
 	int done = 0;
 
-	/* some things will require 8-byte alignment, so everything must */
+	/*
+	 * The code doesn't rely on this (lengths being multiples of 8).  See
+	 * comment in dump_bytes.
+	 */
 	ASSERT0(len % 8);
 
 	while (done < len) {
-- 
1.8.3.1

